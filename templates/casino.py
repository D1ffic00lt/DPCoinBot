import random
import discord
import reladdons

from discord.ext import commands

from ..database.db import Database
from ..config import settings
from .helperfunction import (
    create_emb, fail_rand,
    get_color, divide_the_number
)


class Casino(commands.Cog, name='Casino module', Database):
    def __init__(self, bot: commands.Bot):
        super().__init__()
        self.result_bid: int
        self.bot: commands.Bot = bot
        self.casino: list = settings["casino"]
        self.color: discord.Color
        self.dropped_coefficient: float
        self.line1: list
        self.line2: list
        self.line3: list

    @commands.command(aliases=['rust_casino'])
    @commands.cooldown(1, 2, commands.BucketType.user)
    async def __casino_3(
            self,
            ctx: commands.context.Context,
            bid: int = None,
            number: int = None
    ) -> None:
        if self.is_the_casino_allowed(ctx.message.channel.id):
            if bid is None:
                await ctx.send("–í—ã –Ω—É –≤–≤–µ–ª–∏ –í–∞—à—É —Å—Ç–∞–≤–∫—É!")
            elif bid <= 0:
                await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É –∏ 0!")
            elif self.get_cash(ctx.author.id, ctx.guild.id) < bid:
                await ctx.send("–£ –í–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏!")
            else:
                if number is None:
                    await ctx.send("–í—ã –Ω—É –≤–≤–µ–ª–∏ –Ω–∞ –∫–∞–∫–æ–µ —á–∏—Å–ª–æ –≤—ã —Å—Ç–∞–≤–∏—Ç–µ! –õ–∏–±–æ 1, –ª–∏–±–æ 3, –ª–∏–±–æ 5, –ª–∏–±–æ 10, –ª–∏–±–æ 20!")
                else:
                    if number in [1, 3, 5, 10, 20]:
                        self.take_coins(ctx.author.id, ctx.guild.id, bid)
                        self.color = get_color(ctx.author.roles)
                        random.shuffle(self.casino)
                        if self.casino[0] == number:
                            self.add_coins(ctx.author.id, ctx.guild.id, self.casino[0] * bid)
                            await ctx.send(
                                embed=create_emb(
                                    title="üé∞–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!üé∞",
                                    color=self.color,
                                    args=[
                                        {
                                            "name": f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
                                            "value": f'{ctx.author.mention}, '
                                                     f'–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **{divide_the_number(self.casino[0] * bid)}** '
                                                     f'DP –∫–æ–∏–Ω–æ–≤!',
                                            "inline": False
                                        }
                                    ]
                                )
                            )
                            await self.stats_update(ctx, "rust_casinos", "rc", "wins", bid)
                    elif self.casino[0] != number:
                        await ctx.send(
                            embed=create_emb(
                                title="üé∞–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!üé∞",
                                color=self.color,
                                args=[
                                    {
                                        "name": f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:(',
                                        "value": f'{ctx.author.mention}, –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {self.casino[0]}',
                                        "inline": False
                                    }
                                ]
                            )
                        )
                        await self.stats_update(ctx, "rust_casinos", "rc", "loses", -bid)

                    else:
                        await ctx.send(
                            f"{ctx.author.mention}, –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏–±–æ 1, –ª–∏–±–æ 3, –ª–∏–±–æ 5, –ª–∏–±–æ 10, –ª–∏–±–æ 20!"
                        )
        else:
            await ctx.send(f"{ctx.author.mention}, –í—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ!"
                           )

    @commands.command(aliases=['fail'])
    @commands.cooldown(1, 4, commands.BucketType.user)
    async def __fail(
            self,
            ctx: commands.context.Context,
            bid: int = None,
            coefficient: float = None
    ) -> None:
        if self.is_the_casino_allowed(ctx.message.channel.id):
            if bid is None:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤–∞—à—É —Å—Ç–∞–≤–∫—É")
            elif bid < 10:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞–≤–∫—É –º–µ–Ω—å—à–µ 10")
            elif coefficient is None:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –≤–≤–µ–ª–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç")
            elif coefficient < 0.04:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –Ω–∏–∂–µ 0.04")
            elif coefficient > 10:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –±–æ–ª—å—à–µ 10")
            elif self.get_cash(ctx.author.id, ctx.guild.id) < bid:
                await ctx.send(f"{ctx.author.mention}, –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
            else:
                self.take_coins(ctx.author.id, ctx.guild.id, bid)
                self.dropped_coefficient = fail_rand(ctx.author.id)[0]
                self.color = get_color(ctx.author.roles)
                if self.dropped_coefficient > coefficient:
                    await ctx.send(
                        embed=create_emb(
                            title="üé∞–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!üé∞" +
                                  [" –í–∞–º –≤—ã–ø–∞–ª 0.00...üé∞" if self.dropped_coefficient == 0 else ""][0],
                            color=self.color,
                            args=[
                                {
                                    "name": f':(',
                                    "value": f'–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ `{self.dropped_coefficient}`\n{ctx.author}',
                                    "inline": False
                                }
                                ]
                        )
                    )
                    await self.stats_update(ctx, "fails", "f", "loses", -bid)
                    if self.dropped_coefficient == 0:
                        if not self.check_completion_dropping_zero_in_fail_achievement(ctx.author.id, ctx.guild.id):
                            self.add_coins(ctx.author.id, ctx.guild.id, 4000)
                            self.complete_dropping_zero_in_fail_achievement(ctx.author.id, ctx.guild.id)
                            try:
                                await ctx.author.send(
                                    "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –∑–∞–±—Ä–∞–ª–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –ø–æ—Å—Ç–∞–≤–∏–ª–∏. –ê, –Ω–µ—Ç, –Ω–µ –∑–∞–±—Ä–∞–ª–∏, "
                                    "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –ø–æ—Ñ–∏–∫—Å–∏–ª —ç—Ç–æ...\n–ù—É –∏–ª–∏ –ø–æ—Ñ–∏–∫—Å–∏–ª..."
                                    "\n–í–æ—Ç —Ç–µ–±–µ —Å–∫—Ä–æ–º–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞! (4000 –∫–æ–∏–Ω–æ–≤)"
                                )
                            except discord.errors.Forbidden:
                                pass
                else:
                    self.add_coins(ctx.author.id, ctx.guild.id, int(bid * coefficient))
                    await ctx.send(
                        embed=create_emb(
                            title="üé∞–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!üé∞",
                            color=self.color,
                            args=[
                                {
                                    "name": f'üé∞–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üé∞',
                                    "value": f'–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ `{self.dropped_coefficient}`\n{ctx.author}, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ '
                                             f'**{divide_the_number(int(bid * coefficient))}** DP –∫–æ–∏–Ω–æ–≤!"',
                                    "inline": False
                                }
                            ]
                        )
                    )
                    await self.stats_update(ctx, "fails", "f", "wins", bid * coefficient)
        else:
            await ctx.send(f"{ctx.author.mention}, –í—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ!")

    @commands.command(aliases=['777'])
    @commands.cooldown(1, 4, commands.BucketType.user)
    async def __casino777(self, ctx: commands.context.Context, bid: int = None) -> None:
        if self.is_the_casino_allowed(ctx.message.channel.id):
            if bid is None:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤–∞—à—É —Å—Ç–∞–≤–∫—É")
            elif bid < 10:
                await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞–≤–∫—É –º–µ–Ω—å—à–µ 10")
            else:
                self.color = get_color(ctx.author.roles)
                self.result_bid = bid
                self.take_coins(ctx.author.id, ctx.guild.id, bid)
                self.line1 = reladdons.randoms.choice(
                    "7", "0", "8", "1",
                    output=3,
                    shuffle_long=7,
                    array_long=5,
                    key=ctx.author.id
                )
                self.line2 = reladdons.randoms.choice(
                    "7", "0", "8", "1",
                    output=3, shuffle_long=9,
                    array_long=5,
                    key=ctx.author.id
                )
                self.line3 = reladdons.randoms.choice(
                    "7", "0", "8", "1",
                    output=3,
                    shuffle_long=8,
                    array_long=5,
                    key=ctx.author.id
                )
                if self.line2[1] == "8":
                    self.result_bid *= 2
                elif self.line2[1] == "0":
                    self.result_bid *= 3
                elif self.line2[1] == "7":
                    self.result_bid *= 5
                elif self.line2[1] == "1":
                    self.result_bid *= 1
                if self.line2[0] == self.line2[1] and self.line2[1] == self.line2[2]:
                    self.add_coins(ctx.author.id, ctx.guild.id, self.result_bid)
                    await self.stats_update(ctx, "ssss", "s", "wins", self.result_bid)
                    await ctx.send(
                        embed=create_emb(
                            title="üé∞–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!üé∞",
                            color=self.color,
                            args=[
                                {
                                    "name": f'üé∞–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üé∞',
                                    "value": '`{}\t{}\t{}`\n`{}\t{}\t{}`\n`{}\t{}\t{}\n{}, '
                                             '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **{}** DP –∫–æ–∏–Ω–æ–≤!'.format(
                                                *self.line1[0], *self.line1[1], *self.line1[2],
                                                *self.line2[0], *self.line2[1], *self.line2[2],
                                                *self.line3[0], *self.line3[1], *self.line3[2],
                                                ctx.author.mention, divide_the_number(bid)
                                                ),
                                    "inline": False
                                }
                            ]
                        )
                    )
                elif self.line1[2] == self.line2[1] and self.line2[1] == self.line3[0]:
                    self.add_coins(ctx.author.id, ctx.guild.id, self.result_bid)
                    await ctx.send(
                        embed=create_emb(
                            title="üé∞–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!üé∞",
                            color=self.color,
                            args=[
                                {
                                    "name": f'üé∞–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üé∞',
                                    "value": '`{}\t{}\t{}`\n`{}\t{}\t{}`\n`{}\t{}\t{}\n{}, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **{}** DP '
                                             '–∫–æ–∏–Ω–æ–≤!'.format(
                                                *self.line1[0], *self.line1[1], *self.line1[2],
                                                *self.line2[0], *self.line2[1], *self.line2[2],
                                                *self.line3[0], *self.line3[1], *self.line3[2],
                                                ctx.author.mention, divide_the_number(bid)
                                                ),
                                    "inline": False
                                }
                            ])
                    )
                    self.add_coins(ctx.author.id, ctx.guild.id, self.result_bid)
                    await self.stats_update(ctx, "ssss", "s", "wins", self.result_bid)

                else:
                    await ctx.send(
                        embed=create_emb(
                            title="üé∞–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:(üé∞",
                            color=self.color, args=[
                                {
                                    "name": f':(',
                                    "value": '`{}\t{}\t{}`\n`{}\t{}\t{}`\n`{}\t{}\t{}\n{}'.format(
                                        *self.line1[0], *self.line1[1], *self.line1[2],
                                        *self.line2[0], *self.line2[1], *self.line2[2],
                                        *self.line3[0], *self.line3[1], *self.line3[2],
                                        ctx.author.mention
                                    ),
                                    "inline": False
                                }
                            ]
                        )
                    )
                    await self.stats_update(ctx, "ssss", "s", "loses", -bid)

        else:
            await ctx.send(f"{ctx.author.mention}, –í—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ!")
